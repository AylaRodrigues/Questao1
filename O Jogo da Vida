//# Questao1
//Garotes de Programa- Ayla Rodrigues de Moura, Douglas Mareli, João Vitor Spala, Sofia Kitaeva - Questão 1

#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>
#include <locale.h>

int main()
{
	setlocale (LC_ALL, "");
	
	char start;
	int geracoes, quadrado[30][30],copia[30][30];
	
	int x,y; //linha e coluna
	
	printf("Para inicialização randomica digite 'r', para selecionar as célular digite 'c'\n");
	scanf("%c", &start);
	
	printf("Quantas gerações você quer ver?\n");
	scanf("%d", &geracoes);
	
	//deixando todos os espaços neutros
	for(int i = 0; i < 30; i++)
	{
		for(int j = 0; j< 30; j++)
		{
			quadrado[i][j] = 0;
		}
	}
		
	//opção randomica
	if (start== 'r')
	{	
		int espacos;
		printf("Quantas células vivas?\n");
		scanf("%d", &espacos);
		
		for(int i = 0; i <= espacos; i++)
		{
			x= rand() %29;
			y= rand() %29;
			quadrado[x][y]=1;
		}
	}
	else 
	{
		//opção de escolha
		printf("Digite as cordenadas das células vivas\n");
		while(x != -1 && y != -1)
		{
			scanf("%d %d",&x,&y);
			quadrado[x-1][y-1] = 1;
		}
	}

	//inicio do jogo
	for(int i=0; i<=geracoes; i++)
	{
		system ("cls");
		for(int linha = 0; linha < 30; linha++)
		{
			for(int coluna = 0; coluna < 30; coluna++)
			{
				if(quadrado[linha][coluna] == 1)
				{
					printf("0");
				}
				else
				{
					printf(".");
				}			
			}
			printf("\n");
		}
		printf("\n");
		int ct1=0;
		int ct2=0;
		for(int m=0; m<30; m++)
		{
			for(int n=0; n<30; n++)
			{
				//copiar matrizes
				copia[m][n] = quadrado[m][n];
				
				//calcular se a célula viva morre
				if(copia[m][n]==1)
				{
					if(copia[m][n-1]==1)
						ct1++;
					if(copia[m+1][n-1]==1)
						ct1++;
					if(copia[m-1][n-1]==1)
						ct1++;
					if(copia[m+1][n]==1)
						ct1++;
					if(copia[m-1][n]==1)
						ct1++;
					if(copia[m][n+1]==1)
						ct1++;
					if(copia[m-1][n+1]==1)
						ct1++;
					if(copia[m+1][n+1]==1)
						ct1++;
					if(ct1<2 || ct1>3)
						quadrado[m][n]=0;
				}
				//calcular se a célula morta nasce
				else
				{
					if(copia[m+1][n+1]==1) 
						ct2++;
					if(copia[m+1][n]==1)
						ct2++;
					if(copia[m+1][n-1]==1) 
						ct2++;
					if(copia[m-1][n+1]==1) 	
						ct2++;
					if(copia[m-1][n]==1) 
						ct2++;
					if(copia[m-1][n-1]==1)
						ct2++;
					if(copia[m][n-1]==1)
						ct2++;
					if(copia[m][n+1]==1)
						ct2++;
					if(ct2==3)
						quadrado[m][n]=1;
				}
			}	
		}
		Sleep(1000);
	}
	
	return 0;
}
